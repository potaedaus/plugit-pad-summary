SET phonenum TO $fx'https://wa.me/"phonenumberhere"?text='
SET sender_email TO $fx'sender@mail.com'
SET receiver_email TO $fx'receiver@mail.com'
Variables.CreateNewList List=> plugit_loc
Variables.CreateNewList List=> resultall
Variables.AddItemToList Item: $fx'plugitcloud.com/operator/"your-PlugIT-operator-url-here"/charging-locations/list' List: $fx'=plugit_loc'
Variables.AddItemToList Item: $fx'https://plugitcloud.com/operator/"your-PlugIT-operator-url-here"/charging-locations/list' List: $fx'=plugit_loc'
Variables.AddItemToList Item: $fx'https://plugitcloud.com/operator/"your-PlugIT-operator-url-here"/charging-locations/list' List: $fx'=plugit_loc'
LOOP FOREACH currentloop IN $fx'=plugit_loc'
    WebAutomation.LaunchEdge.LaunchEdgeCloseDialog Url: $fx'=currentloop' WindowState: WebAutomation.BrowserWindowState.Normal ClearCache: False ClearCookies: False WaitForPageToLoadTimeout: $fx'=60' Timeout: $fx'=60' PiPUserDataFolderMode: WebAutomation.PiPUserDataFolderModeEnum.AutomaticProfile TargetDesktop: $fx'{"DisplayName":"Local computer","Route":{"ServerType":"Local","ServerAddress":""},"DesktopType":"local"}' BrowserInstance=> Browser
    WAIT (WebAutomation.WaitForWebPageContent.WebPageToContainText BrowserInstance: $fx'=Browser' Text: $fx'PRICING MODEL') FOR $fx'=20' 
    ON ERROR REPEAT 2 TIMES WAIT 10
    END
    WebAutomation.ExecuteJavascript BrowserInstance: $fx'=Browser' Javascript: $fx'function ExecuteScript() {
    const statusElements = document.querySelectorAll(\'.cpCardInformation__internetStatus.--red\');
    let result = \'\';

    for (let i = 0; i < statusElements.length; i++) {
        const statusEl = statusElements[i];
        const card = statusEl.closest(\'cs-charge-point-card\');
        if (card) {
            const locationEl = card.querySelector(\'.chargePointCard__facilityName\');
            const locationName = locationEl ? locationEl.textContent.trim() : \'Unknown\';

            // Skip test locations. Edit/add more if needed.
            if (locationName === \'KINETA HK\' || locationName === \'KINETA HQ\') {
                continue;
            }

            const statusText = statusEl.textContent.trim();
            result += locationName + \': \' + statusText + \'\\n\';
        }
    }
 // Return empty string if no offline chargers found
    return result;
}

' Result=> resultloop
    Variables.AddItemToList Item: $fx'=resultloop' List: $fx'=resultall'
    WebAutomation.CloseWebBrowser BrowserInstance: $fx'=Browser'
END
Text.JoinText.Join List: $fx'=resultall' Result=> JoinedText
SET FinalMsg TO $fx'=If(JoinedText = "",  "None. All chargers online!", JoinedText)'
DateTime.GetCurrentDateTime.Local DateTimeFormat: DateTime.DateTimeFormat.DateAndTime CurrentDateTime=> CurrentDateTime
Text.ConvertDateTimeToText.FromCustomDateTime DateTime: $fx'=CurrentDateTime' CustomFormat: $fx'dd-MMM-yyy/hh:mm' Result=> date
SET Encode TO $fx'=EncodeUrl("ðŸš¨ Offline Charger(s) for Today, " & date & ":-" & Char(10) & Char(10) & FinalMsg)'
Outlook.Launch Instance=> OutlookInstance
Outlook.SendEmailThroughOutlook.SendEmail Instance: $fx'=OutlookInstance' Account: $fx'=sender_email' SendTo: $fx'=receiver_email' Subject: $fx'PlugIT Charger Down Power Automate Desktop ${CurrentDateTime}' Body: $fx'Hi Everyone, Offline Charger(s) for Today, ${CurrentDateTime}:
${FinalMsg}

Whatsapp Link:
${Concatenate(phonenum, Encode)}' IsBodyHtml: False IsDraft: False
